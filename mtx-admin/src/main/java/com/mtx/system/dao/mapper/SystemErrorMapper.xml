<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtx.system.dao.mapper.SystemErrorMapper">
  <resultMap id="BaseResultMap" type="com.mtx.system.dao.model.SystemError">
    <id column="error_id" jdbcType="INTEGER" property="errorId" />
    <result column="error_type" jdbcType="TINYINT" property="errorType" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="edit_user" jdbcType="INTEGER" property="editUser" />
    <result column="edit_date" jdbcType="TIMESTAMP" property="editDate" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mtx.system.dao.model.SystemError">
    <result column="code" jdbcType="LONGVARCHAR" property="code" />
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    error_id, error_type, class_name, method, edit_user, edit_date, deleted
  </sql>
  <sql id="Blob_Column_List">
    code, message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.mtx.system.dao.model.SystemErrorExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from system_error
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.mtx.system.dao.model.SystemErrorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from system_error
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from system_error
    where error_id = #{errorId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from system_error
    where error_id = #{errorId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mtx.system.dao.model.SystemErrorExample">
    delete from system_error
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mtx.system.dao.model.SystemError">
    insert into system_error (error_id, error_type, class_name, 
      method, edit_user, edit_date, 
      deleted, code, message
      )
    values (#{errorId,jdbcType=INTEGER}, #{errorType,jdbcType=TINYINT}, #{className,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{editUser,jdbcType=INTEGER}, #{editDate,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=TINYINT}, #{code,jdbcType=LONGVARCHAR}, #{message,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mtx.system.dao.model.SystemError">
    insert into system_error
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="errorId != null">
        error_id,
      </if>
      <if test="errorType != null">
        error_type,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="editUser != null">
        edit_user,
      </if>
      <if test="editDate != null">
        edit_date,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="errorId != null">
        #{errorId,jdbcType=INTEGER},
      </if>
      <if test="errorType != null">
        #{errorType,jdbcType=TINYINT},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="editUser != null">
        #{editUser,jdbcType=INTEGER},
      </if>
      <if test="editDate != null">
        #{editDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=LONGVARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mtx.system.dao.model.SystemErrorExample" resultType="java.lang.Long">
    select count(*) from system_error
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update system_error
    <set>
      <if test="record.errorId != null">
        error_id = #{record.errorId,jdbcType=INTEGER},
      </if>
      <if test="record.errorType != null">
        error_type = #{record.errorType,jdbcType=TINYINT},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.editUser != null">
        edit_user = #{record.editUser,jdbcType=INTEGER},
      </if>
      <if test="record.editDate != null">
        edit_date = #{record.editDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update system_error
    set error_id = #{record.errorId,jdbcType=INTEGER},
      error_type = #{record.errorType,jdbcType=TINYINT},
      class_name = #{record.className,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      edit_user = #{record.editUser,jdbcType=INTEGER},
      edit_date = #{record.editDate,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=TINYINT},
      code = #{record.code,jdbcType=LONGVARCHAR},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update system_error
    set error_id = #{record.errorId,jdbcType=INTEGER},
      error_type = #{record.errorType,jdbcType=TINYINT},
      class_name = #{record.className,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      edit_user = #{record.editUser,jdbcType=INTEGER},
      edit_date = #{record.editDate,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mtx.system.dao.model.SystemError">
    update system_error
    <set>
      <if test="errorType != null">
        error_type = #{errorType,jdbcType=TINYINT},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="editUser != null">
        edit_user = #{editUser,jdbcType=INTEGER},
      </if>
      <if test="editDate != null">
        edit_date = #{editDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=LONGVARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where error_id = #{errorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mtx.system.dao.model.SystemError">
    update system_error
    set error_type = #{errorType,jdbcType=TINYINT},
      class_name = #{className,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      edit_user = #{editUser,jdbcType=INTEGER},
      edit_date = #{editDate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=TINYINT},
      code = #{code,jdbcType=LONGVARCHAR},
      message = #{message,jdbcType=LONGVARCHAR}
    where error_id = #{errorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mtx.system.dao.model.SystemError">
    update system_error
    set error_type = #{errorType,jdbcType=TINYINT},
      class_name = #{className,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      edit_user = #{editUser,jdbcType=INTEGER},
      edit_date = #{editDate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=TINYINT}
    where error_id = #{errorId,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>