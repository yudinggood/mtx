<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtx.system.dao.mapper.SystemSystemMapper">
  <resultMap id="BaseResultMap" type="com.mtx.system.dao.model.SystemSystem">
    <id column="system_id" jdbcType="INTEGER" property="systemId" />
    <result column="theme" jdbcType="VARCHAR" property="theme" />
    <result column="basepath" jdbcType="VARCHAR" property="basepath" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="edit_date" jdbcType="TIMESTAMP" property="editDate" />
    <result column="edit_user" jdbcType="INTEGER" property="editUser" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mtx.system.dao.model.SystemSystem">
    <result column="extend_map" jdbcType="LONGVARBINARY" property="extendMap" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    system_id, theme, basepath, name, description, status, edit_date, edit_user
  </sql>
  <sql id="Blob_Column_List">
    extend_map
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.mtx.system.dao.model.SystemSystemExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from system_system
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.mtx.system.dao.model.SystemSystemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from system_system
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from system_system
    where system_id = #{systemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from system_system
    where system_id = #{systemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mtx.system.dao.model.SystemSystemExample">
    delete from system_system
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mtx.system.dao.model.SystemSystem">
    insert into system_system (system_id, theme, basepath, 
      name, description, status, 
      edit_date, edit_user, extend_map
      )
    values (#{systemId,jdbcType=INTEGER}, #{theme,jdbcType=VARCHAR}, #{basepath,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{editDate,jdbcType=TIMESTAMP}, #{editUser,jdbcType=INTEGER}, #{extendMap,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mtx.system.dao.model.SystemSystem">
    insert into system_system
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="systemId != null">
        system_id,
      </if>
      <if test="theme != null">
        theme,
      </if>
      <if test="basepath != null">
        basepath,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="editDate != null">
        edit_date,
      </if>
      <if test="editUser != null">
        edit_user,
      </if>
      <if test="extendMap != null">
        extend_map,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="systemId != null">
        #{systemId,jdbcType=INTEGER},
      </if>
      <if test="theme != null">
        #{theme,jdbcType=VARCHAR},
      </if>
      <if test="basepath != null">
        #{basepath,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="editDate != null">
        #{editDate,jdbcType=TIMESTAMP},
      </if>
      <if test="editUser != null">
        #{editUser,jdbcType=INTEGER},
      </if>
      <if test="extendMap != null">
        #{extendMap,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mtx.system.dao.model.SystemSystemExample" resultType="java.lang.Long">
    select count(*) from system_system
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update system_system
    <set>
      <if test="record.systemId != null">
        system_id = #{record.systemId,jdbcType=INTEGER},
      </if>
      <if test="record.theme != null">
        theme = #{record.theme,jdbcType=VARCHAR},
      </if>
      <if test="record.basepath != null">
        basepath = #{record.basepath,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.editDate != null">
        edit_date = #{record.editDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.editUser != null">
        edit_user = #{record.editUser,jdbcType=INTEGER},
      </if>
      <if test="record.extendMap != null">
        extend_map = #{record.extendMap,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update system_system
    set system_id = #{record.systemId,jdbcType=INTEGER},
      theme = #{record.theme,jdbcType=VARCHAR},
      basepath = #{record.basepath,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      edit_date = #{record.editDate,jdbcType=TIMESTAMP},
      edit_user = #{record.editUser,jdbcType=INTEGER},
      extend_map = #{record.extendMap,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update system_system
    set system_id = #{record.systemId,jdbcType=INTEGER},
      theme = #{record.theme,jdbcType=VARCHAR},
      basepath = #{record.basepath,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      edit_date = #{record.editDate,jdbcType=TIMESTAMP},
      edit_user = #{record.editUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mtx.system.dao.model.SystemSystem">
    update system_system
    <set>
      <if test="theme != null">
        theme = #{theme,jdbcType=VARCHAR},
      </if>
      <if test="basepath != null">
        basepath = #{basepath,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="editDate != null">
        edit_date = #{editDate,jdbcType=TIMESTAMP},
      </if>
      <if test="editUser != null">
        edit_user = #{editUser,jdbcType=INTEGER},
      </if>
      <if test="extendMap != null">
        extend_map = #{extendMap,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where system_id = #{systemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mtx.system.dao.model.SystemSystem">
    update system_system
    set theme = #{theme,jdbcType=VARCHAR},
      basepath = #{basepath,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      edit_date = #{editDate,jdbcType=TIMESTAMP},
      edit_user = #{editUser,jdbcType=INTEGER},
      extend_map = #{extendMap,jdbcType=LONGVARBINARY}
    where system_id = #{systemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mtx.system.dao.model.SystemSystem">
    update system_system
    set theme = #{theme,jdbcType=VARCHAR},
      basepath = #{basepath,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      edit_date = #{editDate,jdbcType=TIMESTAMP},
      edit_user = #{editUser,jdbcType=INTEGER}
    where system_id = #{systemId,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>